#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NAV 1
#define BUTTON 2
#define MEDIA 3
#define NUM 4
#define SYM 5
#define FUN 6

#define U_BTN1 &none
#define U_BTN2 &none
#define U_BTN3 &none

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

&lt {
        tapping-term-ms = <200>;    // <---[[moderate duration]]
        flavor = "balanced";
};

/ {
        behaviors {
                rh_pht: right_hand_positional_hold_tap {
                        compatible = "zmk,behavior-hold-tap";
                        label = "RIGHT_POSITIONAL_HOLD_TAP";
                        #binding-cells = <2>;
                        flavor = "tap-preferred";
                        tapping-term-ms = <200>;                        // <---[[produces tap if held longer than tapping-term-ms]]
                        bindings = <&kp>, <&kp>;
                        hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;    // <---[[left-hand keys]]
                };
                lh_pht: left_hand_positional_hold_tap {
                        compatible = "zmk,behavior-hold-tap";
                        label = "LEFT_POSITIONAL_HOLD_TAP";
                        #binding-cells = <2>;
                        flavor = "tap-preferred";
                        tapping-term-ms = <200>;                        // <---[[produces tap if held longer than tapping-term-ms]]
                        bindings = <&kp>, <&kp>;
                        hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;    // <---[[right-hand keys]]
                };
                rh_bal: right_hand_permissive_hold {
                        compatible = "zmk,behavior-hold-tap";
                        label = "RIGHT_PERMISSIVE_HOLD_TAP";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;    // <---[[moderate duration]]
                        flavor = "balanced";
                        bindings = <&kp>, <&kp>;
                        hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;    // <---[[left-hand keys]]
                };
                lh_bal: left_hand_permissive_hold {
                        compatible = "zmk,behavior-hold-tap";
                        label = "LEFT_PERMISSIVE_HOLD_TAP";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;    // <---[[moderate duration]]
                        flavor = "balanced";
                        bindings = <&kp>, <&kp>;
                        hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;    // <---[[right-hand keys]]
                };
        };

        keymap {
                compatible = "zmk,keymap";

                base_layer {
                        label = "CLMK";
                        bindings = <
&none     &kp Q             &kp W             &kp F             &kp P             &kp G             &kp J             &kp L             &kp U             &kp Y             &kp SQT           &none
&none     &lh_pht LGUI A        &lh_pht LALT R        &lh_pht LCTRL S       &lh_bal LSHFT T       &kp D             &kp H             &rh_bal LSHFT N       &rh_pht LCTRL E       &rh_pht LALT I        &rh_pht LGUI O        &none
&none     &lh_pht BUTTON Z      &lh_pht RALT X        &kp C             &kp V             &kp B             &kp K             &kp M             &kp COMMA         &rh_pht RALT DOT      &rh_pht BUTTON SLASH  &none   
                                    &kp RET           &lt NAV SPC       &lt MEDIA TAB     &lt SYM DEL       &kp LSHFT      &lt NUM BSPC       

                        >;
                };
                nav_layer {
                        label = "NAV";
                        bindings = <
&none     &bootloader       &reset              &none              &none              &none              &kp K_REDO             &kp K_PASTE             &kp K_COPY             &kp K_CUT             &kp K_UNDO          &none   
&none     &kp LGUI          &kp LALT          &kp LCTRL         &kp LSHFT         &none              &kp CAPS          &kp LEFT          &kp DOWN          &kp UP            &kp RIGHT      &none   
&none     &none              &kp RALT          &none              &none              &none              &kp INS           &kp HOME          &kp PG_DN         &kp PG_UP         &kp END        &none   
                                    &none              &none              &none              &kp DEL           &kp ENT          &kp BSPC           


                        >;
                };
                button_layer {
                        label = "BUTTON";
                        bindings = <
&none     &kp K_UNDO             &kp K_CUT             &kp K_COPY             &kp K_PASTE             &kp K_REDO             &kp K_REDO             &kp K_PASTE             &kp K_COPY             &kp K_CUT             &kp K_UNDO             &none
&none     &kp LGUI          &kp LALT          &kp LCTRL         &kp LSHFT         &none             &none             &kp LSHFT         &kp LCTRL         &kp LALT          &kp LGUI          &none
&none     &kp K_UNDO             &kp K_CUT             &kp K_COPY             &kp K_PASTE             &kp K_REDO             &kp K_REDO             &kp K_PASTE             &kp K_COPY             &kp K_CUT             &kp K_UNDO             &none
                                    U_BTN2            U_BTN3            U_BTN1            U_BTN1            U_BTN3            U_BTN2            
                        >;
                };
                media_layer {
                        label = "MEDIA";
                        bindings = <
&none     &bootloader       &reset              &none              &none              &none              &none &bt BT_SEL 0 &bt BT_NXT &bt BT_PRV &bt BT_CLR   &none
&none     &kp LGUI          &kp LALT          &kp LCTRL         &kp LSHFT         &none              &none      &kp C_PREV        &kp C_VOL_DN      &kp C_VOL_UP      &kp C_NEXT        &none
&none     &none             &kp RALT          &none              &none              &none              &bt BT_CLR        &bt BT_SEL 0      &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3      &none
                                    &none              &none              &none              &kp C_STOP        &kp C_PP          &kp C_MUTE        

                        >;
                };
                num_layer {
                        label = "NUM";
                        bindings = <
&none     &kp LBKT          &kp NUM_4         &kp NUM_5         &kp NUM_6         &kp RBKT          &none              &none              &none              &none              &bootloader       &none
&none     &kp SEMI          &kp NUM_1         &kp NUM_2         &kp NUM_3         &kp EQL           &none              &kp LSHFT         &kp LCTRL         &kp LALT          &kp LGUI          &none
&none     &kp GRAVE         &kp NUM_7         &kp NUM_8         &kp NUM_9         &kp BSLH          &none              &caps_word              &none              &kp RALT          &none              &none
                                                &kp DOT           &kp NUM_0         &kp MINUS         &none              &none              &none

                        >;
                };
                sym_layer {
                        label = "SYM";
                        bindings = <
&none     &kp LBRC          &kp DLLR          &kp PRCT          &kp CRRT          &kp RBRC          &none              &none              &none              &none              &bootloader       &none
&none     &kp COLON         &kp EXCL          &kp AT            &kp HASH          &kp PLUS          &none              &kp LSHFT         &kp LCTRL         &kp LALT          &kp LGUI          &none
&none     &kp TILDE         &kp AMPS          &kp ASTRK         &kp LPAR          &kp PIPE          &none              &none              &none              &kp RALT          &none              &none
                                    &kp LPAR          &kp RPAR          &kp UNDER         &none              &none              &none              


                        >;
                };
                fun_layer {
                        label = "FUNC";
                        bindings = <
&none     &kp F12           &kp F7            &kp F8            &kp F9            &kp PSCRN         &none              &none              &none              &none              &bootloader       &none
&none     &kp F11           &kp F4            &kp F5            &kp F6            &kp SLCK          &none              &kp LSHFT         &kp LCTRL         &kp LALT          &kp LGUI          &none
&none     &kp F10           &kp F1            &kp F2            &kp F3            &kp PAUSE_BREAK   &none              &none              &none              &kp RALT          &none              &none
                                    &kp K_APP         &kp SPC           &kp TAB           &none              &none              &none              

                        >;
                };
        };
};